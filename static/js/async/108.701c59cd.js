"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["108"],{2385:function(e,n,r){r.r(n),r.d(n,{default:function(){return o}});var s=r(5893),i=r(65);function l(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",h2:"h2",ul:"ul",li:"li",code:"code",pre:"pre",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",h3:"h3",ol:"ol"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"tinypng",children:["TinyPNG",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tinypng",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.jsdelivr.net/gh/viteui/viteui.github.io@web-image/web/image/202410051201463.png",alt:"image-20241005120141325"})}),"\n",(0,s.jsxs)(n.h2,{id:"介绍",children:["介绍",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#介绍",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["基于",(0,s.jsx)(n.code,{children:"tinypng"}),"的图片压缩工具，支持图片压缩功能。"]}),"\n",(0,s.jsx)(n.li,{children:"使用客户端压缩图片，无需上传到服务器，直接在客户端进行压缩。"}),"\n",(0,s.jsx)(n.li,{children:"支持WebWork"}),"\n",(0,s.jsxs)(n.li,{children:["npm：",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/tinypng-lib",target:"_blank",rel:"noopener noreferrer",children:"tinypng-lib"})]}),"\n",(0,s.jsxs)(n.li,{children:["在线体验地址：",(0,s.jsx)(n.a,{href:"https://tinypng.wcrane.cn/example",target:"_blank",rel:"noopener noreferrer",children:(0,s.jsx)(n.a,{href:"https://tinypng.wcrane.cn/example",target:"_blank",rel:"noopener noreferrer",children:"https://tinypng.wcrane.cn/example"})})]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"使用方法",children:["使用方法",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用方法",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"安装"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npm install tinypng-lib\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"基本使用"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'<template>\n  <div id="app">\n    <input type="file" @input="uploadImg" />\n    <img :src="imgUrl" alt="">\n  </div>\n</template>\n\n<script>\nimport TinyPNG from \'tinypng-lib\'\n\n\nexport default {\n  name: \'App\',\n  components: {\n  },\n  data() {\n    return {\n      imgUrl: \'\'\n    }\n  },\n  methods: {\n    async uploadImg(e) {\n      const file = e.target.files[0];\n      try {\n        const res = await TinyPNG.compress(file, {})\n        console.log(\'res\', res)\n        const url = URL.createObjectURL(res.blob)\n        const img = new Image()\n        this.imgUrl = url\n      } catch (error) {\n        console.log("error", error)\n      }\n\n    }\n  }\n}\n<\/script>\n'})}),"\n",(0,s.jsxs)(n.h2,{id:"参数说明",children:["参数说明",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#参数说明",children:"#"})]}),"\n",(0,s.jsxs)(n.table,{children:["\n",(0,s.jsxs)(n.thead,{children:["\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.th,{align:"left",children:"参数"}),"\n",(0,s.jsx)(n.th,{children:"说明"}),"\n",(0,s.jsx)(n.th,{children:"默认值"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.tbody,{children:["\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{align:"left",children:"minimumQuality"}),"\n",(0,s.jsx)(n.td,{children:"最小质量"}),"\n",(0,s.jsx)(n.td,{children:"35"}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{align:"left",children:"quality"}),"\n",(0,s.jsx)(n.td,{children:"期望压缩质量（0-100）"}),"\n",(0,s.jsx)(n.td,{children:"88"}),"\n"]}),"\n",(0,s.jsxs)(n.tr,{children:["\n",(0,s.jsx)(n.td,{align:"left",children:"fileName"}),"\n",(0,s.jsx)(n.td,{children:"压缩后的文件名"}),"\n",(0,s.jsx)(n.td,{children:"文件名称"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"/**\n * 压缩图片参数\n */\ninterface CompressOptions {\n    minimumQuality?: number; // 最小质量\n    quality?: number; // 压缩质量 0 - 100\n    fileName?: string; // 压缩后的文件名, 默认为file.name\n}\n\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"返回值说明",children:["返回值说明",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#返回值说明",children:"#"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"/**\n * 压缩图片结果\n */\ninterface CompressResult {\n    success: boolean, // 是否成功\n    file: File, // 压缩后的文件\n    originalSize: number, // 原始文件大小\n    compressedSize: number, // 压缩后文件大小\n    rate: number, // 压缩率（压缩为原来的%）\n    output: ArrayBuffer, // 压缩后的 ArrayBuffer\n    blob: Blob, // 压缩后的 Blob\n    rateString: string, // 压缩率字符串\n\n}\n\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"webworker中使用",children:["WebWorker中使用",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#webworker中使用",children:"#"})]}),"\n",(0,s.jsxs)(n.h3,{id:"基本使用",children:["基本使用",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#基本使用",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.jsdelivr.net/gh/viteui/viteui.github.io@web-image/web/image/202410051200510.png",alt:"image-20241005120050296"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["webpack项目中安装",(0,s.jsx)(n.code,{children:"worker-loader"})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"npm install worker-loader\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["在",(0,s.jsx)(n.code,{children:"webpack.config.js"}),"中配置"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"module.exports = {\n  // ...\n  module: {\n    rules: [\n      {\n        test: /\\.worker\\.js$/,\n        use: { loader: 'worker-loader' },\n      },\n    ],\n  },\n};\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:["定义",(0,s.jsx)(n.code,{children:"imageWorker.worker.js"})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// imageWorker.worker.js\nimport TinyPNG from 'tinypng-lib';\n\nself.onmessage = async function (e) {\n    const {\n        image,\n        options\n    } = e.data;\n    try {\n      	// 使用支持webWorker的方法\n        const result = await TinyPNG.compressWorkerImage(image, options);\n        self.postMessage(result);\n    } catch (error) {\n        self.postMessage({ error: error.message });\n    }\n};\n\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:"在组件中使用"}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"监听webworker的消息"}),"\n",(0,s.jsxs)(n.li,{children:["使用 ",(0,s.jsx)(n.code,{children:"TinyPNG.getImage"})," 处理文件信息"]}),"\n",(0,s.jsx)(n.li,{children:"发送图片信息给webworker进行压缩"}),"\n",(0,s.jsx)(n.li,{children:"接收webworker返回的压缩结果"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"<script>\n// Import the worker\nimport ImageWorker from './imageWorker.worker.js'; // This is the bundled worker\nimport { getSizeTrans } from '../utils';\nimport TinyPNG from 'tinypng-lib';\nexport default {\n  name: 'Base',\n  mounted() {\n    // Start the worker when the component is mounted\n    this.worker = new ImageWorker();\n\n    // Receive the message (compressed result) from the worker\n    this.worker.onmessage = (e) => {\n      this.compressing = false;\n      const result = e.data;\n      if (result.error) {\n        console.error(\"Compression failed:\", result.error);\n      } else {\n        // 拿到压缩结果\n        console.log(e);\n      }\n    };\n  },\n  methods: {\n    getSizeTrans,\n    async uploadImg(e) {\n      const file = e.file;\n      // 获取图片信息\n      const image = await TinyPNG.getImage(file);\n      // Send the file to the worker for compression\n      this.worker.postMessage({\n        image,\n        options: {\n          minimumQuality: 30,\n          quality: 85\n        }\n      });\n    }\n  },\n  beforeDestroy() {\n    // Terminate the worker when the component is destroyed\n    if (this.worker) {\n      this.worker.terminate();\n    }\n  }\n}\n<\/script>\n\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"5",children:["\n",(0,s.jsxs)(n.li,{children:["说明：对于jpeg、jpg的图片不支持使用WebWorker压缩需要使用",(0,s.jsx)(n.code,{children:"TinyPNG.compressJpegImage"})," 进行压缩"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import TinyPNG from 'tinypng-lib';\nTinyPNG.compressJpegImage(file, options)\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"compressworker-使用",children:["CompressWorker 使用",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#compressworker-使用",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"封装代码"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import ImageWorker from './imageWorker.worker.js'; // 与前面imageWorker.worker.js一致\n\nexport class CompressWorker {\n    worker = null;\n    constructor() {\n        this.worker = new ImageWorker();\n    }\n    async compress(file, options) {\n        // 获取图片信息\n        const image = await TinyPNG.getImage(file);\n        return new Promise((resolve, reject) => {\n            // 监听worker的消息\n            this.worker.onmessage = (e) => {\n                const result = e.data;\n                if (result.error && !result.success) {\n                    console.error(\"Compression failed:\", result.error);\n                    reject(result.error);\n                } else {\n                    resolve(result);\n                }\n            };\n            // Send the file to the worker for compression\n            this.worker.postMessage({\n                image,\n                options\n            });\n\n        });\n    }\n\n    terminate() {\n        if (this.worker) {\n            this.worker.terminate();\n            this.worker = null;\n        }\n\n    }\n}\n\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["使用","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["实例化：",(0,s.jsx)(n.code,{children:"CompressWorker"}),"只注册一次就行，比如vue的mounted生命周期"]}),"\n",(0,s.jsx)(n.li,{children:"图片压缩"}),"\n",(0,s.jsxs)(n.li,{children:["页面或者组件卸载的时候执行, 销毁 ",(0,s.jsx)(n.code,{children:"CompressWorker"})," 实例"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// 1. 只注册一次就行，比如vue的mounted生命周期\ncompressWorker = new CompressWorker();\n\n// 2. 监听选择的图片，图片压缩\ncompressWorker.compress(file, {\n  minimumQuality: 30,\n  quality: 85\n}).then((result) => {\n  // 压缩结果\n  console.log(result);\n})\n\n// 3. 页面或者组件卸载的时候执行, 销毁webworker\nif (compressWorker) {\n  compressWorker.terminate();\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"注意事项",children:["注意事项",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#注意事项",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["请确保已经安装了",(0,s.jsx)(n.code,{children:"tinypng-lib"}),"模块"]}),"\n"]})]})}function t(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}let o=t;t.__RSPRESS_PAGE_META={},t.__RSPRESS_PAGE_META["guide%2Findex.md"]={toc:[{text:"介绍",id:"介绍",depth:2},{text:"使用方法",id:"使用方法",depth:2},{text:"参数说明",id:"参数说明",depth:2},{text:"返回值说明",id:"返回值说明",depth:2},{text:"WebWorker中使用",id:"webworker中使用",depth:2},{text:"基本使用",id:"基本使用",depth:3},{text:"CompressWorker 使用",id:"compressworker-使用",depth:3},{text:"注意事项",id:"注意事项",depth:2}],title:"TinyPNG",frontmatter:{}}}}]);